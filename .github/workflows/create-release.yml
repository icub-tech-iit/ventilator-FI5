name: Create Release

on: 
  workflow_dispatch:
    inputs:
      name:
        description: 'Release Name'
        required: true
        default: 'FI5 Ventilator Release v0.0.0'
      body:
        description: 'Release Body Message'
        required: true
        default: 'The asset provided by this release contains the whole material stored in the repository.'
      tag:
        description: 'Release Tag'
        required: true
        default: 'v0.0.0'

jobs:
  doRelease:
    name: "Release"
    runs-on: ubuntu-latest
    environment: release_environment

    steps:
      - name: Release Inputs
        run: |
          echo "Release Inputs:"
          echo "- Name: ${{ inputs.name }}" 
          echo "- Body: ${{ inputs.body }}" 
          echo "- Tag: ${{ inputs.tag }}" 

      - name: Clone Branch master
        uses: actions/checkout@main
        with:
          ref: master
          path: release/master
          lfs: true

      - name: Clone Branch doc
        uses: actions/checkout@main
        with:
          ref: doc
          path: release/doc
          lfs: true

      - name: Clone Branch mech
        uses: actions/checkout@main
        with:
          ref: mech
          path: release/mech
          lfs: true

      - name: Clone Branch ele
        uses: actions/checkout@main
        with:
          ref: ele
          path: release/ele
          lfs: true

      - name: Clone Branch code
        uses: actions/checkout@main
        with:
          ref: code
          path: release/code
          lfs: true

      - name: Configure Git
        run: |
          git config --global push.default upstream
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Tag Branches
        run: |
          declare -a branches=("master" "doc" "mech" "ele" "code")
          for branch in ${branches[@]}; do
            echo "tagging ${branch}..."
            cd ${GITHUB_WORKSPACE}/release/${branch}
            git tag -a ${branch}-${{ inputs.tag }} -m "version ${{ inputs.tag }}"
            git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
            git push origin --tags
            rm -Rf .git
          done

      - name: Create Asset
        run: |
          cd ${GITHUB_WORKSPACE}/release
          zip -r ventilator-FI5-${{ inputs.tag }}.zip .
          cd -
          mv ${GITHUB_WORKSPACE}/release/ventilator-FI5-${{ inputs.tag }}.zip .
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: master-${{ inputs.tag }}
          release_name: ${{ inputs.name}}
          body: ${{ inputs.body }}

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ventilator-FI5-${{ inputs.tag }}.zip
          asset_name: ventilator-FI5-${{ inputs.tag }}.zip
          asset_content_type: application/zip
